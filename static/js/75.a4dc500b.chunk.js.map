{"version":3,"file":"static/js/75.a4dc500b.chunk.js","mappings":"6RAAO,IAAMA,EAAU,gCACVC,EAAS,mCAETC,EAAe,mCACfC,EAAoB,mCAEpBC,EAAmB,sCACnBC,EAAwB,qC,0GCNrC,GAAiB,E,QCCJC,EAAe,mCAAG,WAAMC,GAAN,yFACXC,MAAM,GAAD,OAClBR,EAAAA,GADkB,iBACFO,EADE,4BACoBN,EAAAA,GADpB,2BADM,cACvBQ,EADuB,gBAIVA,EAAIC,OAJM,cAIvBC,EAJuB,yBAKtBA,GALsB,2CAAH,sD,2BC6C5B,EAzCsB,WACpB,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAaC,EAAAA,EAAAA,MAAbD,SAgBR,OAdAE,EAAAA,EAAAA,YAAU,WAAM,wCAEd,6GAEuBX,EAAgBY,OAAOH,IAF9C,OAEUJ,EAFV,OAGIG,EAAWH,EAAKQ,SAHpB,gDAKIC,QAAQC,IAAR,MALJ,0DAFc,sBACdD,QAAQC,IAAIN,GADE,mCAUdO,EACD,GAAE,CAACP,IAEJK,QAAQC,IAAIR,IAEV,4BACE,4CACA,SAAC,EAAAU,SAAD,CAAUC,UAAU,wCAApB,UACE,wBACGX,EAAQY,OAAS,EAChBZ,EAAQa,KAAI,SAAAC,GACV,OACE,2BACE,gBAAIC,UAAWC,EAAAA,aAAf,qBAA0CF,EAAOG,WACjD,cAAGF,UAAWC,EAAAA,YAAd,SAAgCF,EAAOI,YAFhCJ,EAAOpB,GAKnB,KAED,6CAMX,C","sources":["API/api.js","components/MoviesReviews/MoviesReviews.module.css","API/getMovieReviews.js","components/MoviesReviews/MoviesReviews.jsx"],"sourcesContent":["export const baseUrl = 'https://api.themoviedb.org/3/';\nexport const apiKey = '81ea3d7bbcc395dafd55ea308df4d534';\n\nexport const imageBaseUrl = 'https://image.tmdb.org/t/p/w500/';\nexport const imageBaseUrlSmall = 'https://image.tmdb.org/t/p/w185/';\n\nexport const imagePlaceholder = 'https://via.placeholder.com/500x750';\nexport const imagePlaceholderSmall = 'https://via.placeholder.com/185x278';\n","// extracted by mini-css-extract-plugin\nexport default {};","import { baseUrl, apiKey } from './api';\n\nexport const getMovieReviews = async id => {\n  const res = await fetch(\n    `${baseUrl}movie/${id}/reviews?api_key=${apiKey}&language=en-US&page=1`\n  );\n  const data = await res.json();\n  return data;\n};\n","import css from './MoviesReviews.module.css';\n\nimport { getMovieReviews } from 'API/getMovieReviews';\nimport { Suspense, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst MoviesReviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { moviesId } = useParams();\n\n  useEffect(() => {\n    console.log(moviesId);\n    async function fetchData() {\n      try {\n        const data = await getMovieReviews(Number(moviesId));\n        setReviews(data.results);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetchData();\n  }, [moviesId]);\n\n  console.log(reviews);\n  return (\n    <div>\n      <h1>Movies Reviews</h1>\n      <Suspense fallback={<div>Loading...</div>}>\n        <ul>\n          {reviews.length > 0 ? (\n            reviews.map(review => {\n              return (\n                <li key={review.id}>\n                  <h2 className={css.ReviewsTitle}>Author: {review.author}</h2>\n                  <p className={css.ReviewsText}>{review.content}</p>\n                </li>\n              );\n            })\n          ) : (\n            <li>No reviews</li>\n          )}\n        </ul>\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MoviesReviews;\n"],"names":["baseUrl","apiKey","imageBaseUrl","imageBaseUrlSmall","imagePlaceholder","imagePlaceholderSmall","getMovieReviews","id","fetch","res","json","data","useState","reviews","setReviews","moviesId","useParams","useEffect","Number","results","console","log","fetchData","Suspense","fallback","length","map","review","className","css","author","content"],"sourceRoot":""}