{"version":3,"file":"static/js/202.c735509b.chunk.js","mappings":"8RAAO,IAAMA,EAAU,gCACVC,EAAS,mCAETC,EAAe,mCACfC,EAAoB,mCAEpBC,EAAmB,sCACnBC,EAAwB,qC,mHCLxBC,EAAe,mCAAG,WAAMC,GAAN,yFACXC,MAAM,GAAD,OAClBR,EAAAA,GADkB,iBACFO,EADE,4BACoBN,EAAAA,GADpB,oBADM,cACvBQ,EADuB,gBAIVA,EAAIC,OAJM,cAIvBC,EAJuB,yBAKtBA,GALsB,2CAAH,sD,kBCD5B,GAAiB,E,SCuDjB,EAhDmB,WACjB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACMC,GAASC,EAAAA,EAAAA,MAef,OAbAC,EAAAA,EAAAA,YAAU,WAAM,wCAEd,6GAEuBX,EAAgBS,EAAOG,UAF9C,OAEUP,EAFV,OAGIG,EAAQH,EAAKE,MAHjB,gDAKIM,QAAQC,IAAR,MALJ,0DAFc,sBACdD,QAAQC,IAAIL,GADE,mCAUdM,EACD,GAAE,CAACN,KAGF,gBAAKO,UAAWC,EAAAA,WAAhB,UACE,SAAC,EAAAC,SAAD,CAAUC,UAAU,wCAApB,SACGZ,EAAKa,OAAS,GACb,wBACGb,EAAKc,KAAI,YAA4C,IAAzCpB,EAAwC,EAAxCA,GAAIqB,EAAoC,EAApCA,aAAcC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,UAEnC,OACE,2BACE,gBACEC,IACEH,EAAY,UACLzB,EAAAA,IADK,OACeyB,GACvBvB,EAAAA,GAEN2B,IAAKH,KAEP,uBAAIA,KACJ,uBAAIC,MAVGvB,EAaZ,OAGH,6CAKT,C","sources":["API/api.js","API/getMovieCredits.js","components/MoviesCast/MoviesCast.module.css","components/MoviesCast/MoviesCast.jsx"],"sourcesContent":["export const baseUrl = 'https://api.themoviedb.org/3/';\nexport const apiKey = '81ea3d7bbcc395dafd55ea308df4d534';\n\nexport const imageBaseUrl = 'https://image.tmdb.org/t/p/w500/';\nexport const imageBaseUrlSmall = 'https://image.tmdb.org/t/p/w185/';\n\nexport const imagePlaceholder = 'https://via.placeholder.com/500x750';\nexport const imagePlaceholderSmall = 'https://via.placeholder.com/185x278';\n","import { baseUrl, apiKey } from './api';\n\nexport const getMovieCredits = async id => {\n  const res = await fetch(\n    `${baseUrl}movie/${id}/credits?api_key=${apiKey}&language=en-US`\n  );\n  const data = await res.json();\n  return data;\n};\n","// extracted by mini-css-extract-plugin\nexport default {};","import { getMovieCredits } from 'API/getMovieCredits';\nimport { imageBaseUrlSmall, imagePlaceholderSmall } from 'API/api';\n\nimport { Suspense, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport css from './MoviesCast.module.css';\n\nconst MoviesCast = () => {\n  const [cast, setCast] = useState([]);\n  const params = useParams();\n\n  useEffect(() => {\n    console.log(params);\n    async function fetchData() {\n      try {\n        const data = await getMovieCredits(params.moviesId);\n        setCast(data.cast);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetchData();\n  }, [params]);\n\n  return (\n    <div className={css.MoviesCast}>\n      <Suspense fallback={<div>Loading...</div>}>\n        {cast.length > 0 ? (\n          <ul>\n            {cast.map(({ id, profile_path, name, character }) => {\n              // console.log(cast);\n              return (\n                <li key={id}>\n                  <img\n                    src={\n                      profile_path\n                        ? `${imageBaseUrlSmall}${profile_path}`\n                        : imagePlaceholderSmall\n                    }\n                    alt={name}\n                  />\n                  <p>{name}</p>\n                  <p>{character}</p>\n                </li>\n              );\n            })}\n          </ul>\n        ) : (\n          <h2>No cast found</h2>\n        )}\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MoviesCast;\n"],"names":["baseUrl","apiKey","imageBaseUrl","imageBaseUrlSmall","imagePlaceholder","imagePlaceholderSmall","getMovieCredits","id","fetch","res","json","data","useState","cast","setCast","params","useParams","useEffect","moviesId","console","log","fetchData","className","css","Suspense","fallback","length","map","profile_path","name","character","src","alt"],"sourceRoot":""}